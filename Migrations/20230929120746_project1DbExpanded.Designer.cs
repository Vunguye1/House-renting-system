// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project1.Models;

#nullable disable

namespace Project1.Migrations
{
    [DbContext(typeof(RealestateDbContext))]
    [Migration("20230929120746_project1DbExpanded")]
    partial class project1DbExpanded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("Project1.Models.Realestate", b =>
                {
                    b.Property<int>("RealestateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Price")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("imageurl")
                        .HasColumnType("TEXT");

                    b.HasKey("RealestateId");

                    b.HasIndex("UserId");

                    b.ToTable("Realestates");
                });

            modelBuilder.Entity("Project1.Models.Rent", b =>
                {
                    b.Property<int>("RentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("RealestateId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RentDateFrom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RentDateTo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RentID");

                    b.HasIndex("RealestateId");

                    b.HasIndex("UserId");

                    b.ToTable("Rent");
                });

            modelBuilder.Entity("Project1.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Project1.Models.Realestate", b =>
                {
                    b.HasOne("Project1.Models.User", null)
                        .WithMany("Realestate")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Project1.Models.Rent", b =>
                {
                    b.HasOne("Project1.Models.Realestate", "Realestate")
                        .WithMany("Rents")
                        .HasForeignKey("RealestateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project1.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Realestate");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Project1.Models.Realestate", b =>
                {
                    b.Navigation("Rents");
                });

            modelBuilder.Entity("Project1.Models.User", b =>
                {
                    b.Navigation("Realestate");
                });
#pragma warning restore 612, 618
        }
    }
}
