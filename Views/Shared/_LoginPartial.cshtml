@using Microsoft.AspNetCore.Identity

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">

            @{ // get our user from the database
                var user = await UserManager.GetUserAsync(User);
            }

            @if ( user.ProfilePicture != null) // if profilePicture is updated --> display it
            {
                <img style="width:30px;height:30px; object-fit:cover; border-radius:20px" src="data:image/*;base64,@(Convert.ToBase64String(user.ProfilePicture))">

            }
        </li>
        <li class="nav-item">
            <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello, @user.FirstName!</a>
        </li>
        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>

        <li class="nav-item">
            <a asp-controller="ApplicationUser" asp-action="ListRealestateByOwner" asp-route-ownerId="@user.Id" class="nav-link text-dark">Your real estates</a>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
